# About v3

This branch aims to rewrite Eadrax with the following major changes.

## Re-target WIPUP's audience

 * A more distinctive visual aesthetic (clean and whimsical)
 * Donationware usage
 * Improved project privacy settings
 * Added "highlights" pick for updates
 * Better bulk update management
 * Away from just ambitious projects to just constant production
 * Remove the group blog idea and focus on project views
 * Revitalise the API to prepare for native apps

The new WIPUP one-liner is: "A diary for your creations"

You might like WIPUP if you:
 * Love making stuff, and do it often
 * Want a no-nonsense place to track and share your creations
 * Work with different mediums: from images, video, music to code
 * Have a project-oriented workflow
 * Want to visualise your process and progress
 * Prefer open-source software

## Switch from KO2 to KO3

KO2 is nice, but no longer supported, and the recommended method to start new
projects is by using KO3.

## Use best practices

BDD, stricter coding style, templating, improved docs ...

## Refactor

I was guilty of code rot.

# About Eadrax

Providing an easy way for people to show what they're working on.
Eadrax is available live at http://live.wipup.org

# System Requirements

 * Apache >= 2.2
 * PHP >= 5.x (4.x is not supported)
 * MySQL >= 5.0
 * ffmpeg >= 0.6 (needed for video features)
 * ffmpeg-php >= 0.6 (needed for video features)
 * diff >= 2.8.0 (needed for revision features)
 * PEAR Text_Diff >= 1.1.1 (needed for inline revision features)
 * An RPX API key by Janrain's OpenID services. (needed for OpenID features)

The most recent packages are recommended.

TODO: revise readme text from this point onwards
-------------------------------------------------------------------------------

------------------
DOWNLOADING EADRAX
------------------

You can grab the latest copy of Eadrax project from 
http://github.com/Moult/Eadrax

To download the sourcecode from the page, click on the link that says "Download
Source". In case you want to work on Eadrax you need to know at least the basics
of GIT[*1] version control system.

To check out the source from the repository on github.com , do the following on
the command line for Unix based systems:

	$ git clone git://github.com/Moult/Eadrax.git

If all went well, you will find a folder named "Eadrax" in the directory where
you executed the above command.

[For Windows and Mac systems, please adapt the above guide to your respective
systems for GIT.]

-----------------
INSTALLING EADRAX
-----------------

1. Upload a copy of Eadrax to your webserver. It is possible to install Eadrax
in a subdirectory.

2. Make sure the following directories are writable by your webserver
(and thusly by PHP):
		application/cache/
		application/logs/
		application/tmp/
		uploads/
		uploads/*/ (ie. any subdirectory within uploads)

3. Setting up DATABASE

You need to create a Database named `eadrax` (or anything of your liking in case
you know what you are doing), a user `eadrax` who has all necessary privileges
for the database `eadrax`.

The following commands for mysql should get you through the database setup
pretty smoothly.

---------
NOTE: the following mysql commands are only to guide you through the process of
setting it up quick and easy are not necessarily the most secure way of setting
up your database. Please read MySQL documentation if you are doing this setup in
a sensitive or production environment.  Please get  the manuals here:
http://dev.mysql.com/doc/index.html
---------

To create database 'eadrax' from mysql prompt, you probably need to log in as
root (or if you can't do that, ask your system administrator to create these for
you). Assuming you have root privileges on your mysql server:

mysql> CREATE DATABASE IF NOT EXISTS eadrax;
# http://dev.mysql.com/doc/refman/5.1/en/create-database.html

mysql> CREATE USER eadrax IDENTIFIED BY 'YOURPaSSwOrDHeRe';
# http://dev.mysql.com/doc/refman/5.1/en/create-user.html

mysql> GRANT ALL ON eadrax.* TO 'eadrax'@'localhost';
# http://dev.mysql.com/doc/refman/5.1/en/grant.html
# This line assumes that you have your mysql server on localhost. 
# If not we hope you already know what you are doing.

Import the database schema in DATABASE into your newly created database.

Change to the directory where Eadrax is copied or checked out (git clone'd), 
typically named 'Eadrax', unless you changed it, and type the following 
command on your command prompt:

(WARNING: what follows requires that you have a database 'eadrax' setup
and you have a user named 'eadrax' on your mysql server who can access
and create/delete/update tables in the database 'eadrax')

	$ mysql -u eadrax -p eadrax < DATABASE

Hit enter after above command and enter password for user eadrax.

The above command is in the format

	$ mysql -u username -p database_name < input_sql_file

NOTE: You may alternatively use tools like PHPMyAdmin to complete the
above steps if you are more comfortable working with GUI based tools.

4. Configuration files.

Files to edit:
	.htaccess
	application/config/config.php
	application/config/database.php
	application/config/authlite.php

Editing config.php:

The file is extensively documented and self explanatory.
Typically you would not need to make any changes to this file if
you set up Eadrax to be accessible through a URL like 

	http://localhost/Eadrax

If you have it set up at something like,

	http://localhost/path/to/Eadrax

you need to change line 7 from 
	 $config['site_domain'] = $_SERVER['SERVER_NAME']."/Eadrax";

to
	 $config['site_domain'] = $_SERVER['SERVER_NAME']."/path/to/Eadrax";

Just ensure that all of the paths to the application binaries (eg: ffmpeg) are
correct.

Editing database.php:

Again, massively documented file. If you followed the above procedure
you would only need to change line 34 in this file from

	    'pass'     => 'password',

to
	    'pass'     => 'your-database-password',

Note the comma at the end of that line!

Editing authlite.php"

If you want OpenID services to work, you need an RPX Api key (Janrain Engage)
available from http://www.janrain.com/. Change:
	$config['rpxApiKey'] = 'replace_with_your_key_here';

For security, we also recommend changing the session_key to a unique and random
value that you may choose yourself. Change:
	$config['session_key'] = 'authlite_user';

5. Deploying Eadrax as a live site (optional).

If you are planning on deploying Eadrax as a live website, please read:
	http://docs.kohanaphp.com/installation/deployment

-------------
ENJOY EADRAX!
-------------

That's about it. If you did everything right, you should see the page
load at the URL http://localhost/Eadrax if you installed it right to your
localhost. Otherwise just point your browser at the address at which you have
installed Eadrax into.

------------------------------
DEVELOPER-SPECIFIC INFORMATION
------------------------------

Before you commit, you might want to add these to .gitignore so that you don't
accidentally commit your local system's settings to the GIT repository.

# example contents of file .gitignore
.gitignore
.htaccess
uploads/files/*
uploads/icons/*
uploads/avatars/*
application/logs/*
application/config/*
# end of example

 * Don't refer to the site as Eadrax in the code, its name is WIPUP.
 * Documentation is inline and follows the PHPDoc conventions.
 * We don't use camelCase, we name variables exactly what they are and use
 * underscores. Usage of $i is good for iterators.
 * At the moment our conventions follow this structure for large code blocks:

// Example coding convention style
$foo				= 'bar';		# same-line comment using hash
$baz				= 'not double';	# notice alignment
$another_variable	= 'foobar';

if ($x == '1')
{
	// A large block of code. Notice the { is on a new line.
	if ($y == TRUE) {
		// Small block of code, notice the capital TRUE above and how the { is
		// on the same line as the if statement.
		echo 'Use single quotes, '. $baz;
	}
}

[*1] You can learn more about git by reading http://progit.org/
